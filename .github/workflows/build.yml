name: Build application 

on:
  push:

jobs:
  build-and-test-frontend:
    name: Build frontend project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2.6.1
        with:
          flutter-version: '2.2.0'

      - name: Install UI
        run: |
          cd ui
          ./install_ui

      - uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: |
            ui/build/web


  build-and-test-backend:
    name: Build backend project
    runs-on: ubuntu-latest
    needs: build-and-test-frontend

    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '11.0.1'
          distribution: 'zulu'

      - name: Download fronted from the frontend job
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: frontend

      - name: Copy frontend
        run: |
          rm -rf src/main/resources/static
          mkdir -p src/main/resources/static
          cp -R frontend/* src/main/resources/static/
 
      - name: Build with Maven
        run: mvn install -DskipTests

      - name: Test with Maven
        run: mvn test

      - uses: actions/upload-artifact@v3
        with:
          name: backend
          path: |
            target/**/*.xml
            target/*.jar

  create-docker-image:
    name: "Create docker image"
    needs: build-and-test-backend

    runs-on: ubuntu-latest

    if: success()

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_ORGANIZATION: philipssoftware
      GITHUB_ORGANIZATION: philips-software
      COSIGN_PASSWORD: ${{ secrets.COSGIN_PASSWORD }}
      COSIGN_PRIVATE_KEY: ${{ secrets.COSGIN_PRIVATE_KEY }}
      COSIGN_PUBLIC_KEY: ${{ secrets.COSGIN_PUBLIC_KEY }}
      
    steps:
      - name: Checkout

        uses: actions/checkout@v3

      - name: Download backend from the backend job
        uses: actions/download-artifact@v3
        with:
          name: backend
          path: target

      - name: Build Docker Images
        uses: philips-software/docker-ci-scripts@v4.4.0
        with:
          dockerfile: docker/Dockerfile
          image-name: bom-bar
          tags: 0 0.4 0.4.0 v0.4.0 latest ${{ github.sha }}
          sign: true
          slsa-provenance: true
          sbom: true
